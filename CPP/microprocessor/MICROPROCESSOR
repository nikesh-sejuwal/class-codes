MICROPROCESSOR

;<MULTIPLICATION OF TWO 8-BIT NUMBERS>
LXI H, 2000H; H = 20H, L=00H
MOV B,M ; LOAD THE MEMORY CONTENT TO REG. B
INX H ; INCREMENT HL PAIR BY UNITY
MOV C, M; SET THE COUNTER 
MVI A, 00H; SUM = 0
UP:ADD B; A = A+B
DCR C; C = C-1
JNZ UP ; LOOP UNTIL DESIRED COUNT IS REACHED
INX H ; INCREMENT HL PAIR
MOV M,A ; STORE THE RESULT IN MEMORY LOCATION
HLT; TERMINATE THE PROGRAM









;<WAP TO ADD THE BLOCK OF 10 NUMBERS STARTIG AT THE MEMORY LOCATON 2000H AND STORE THE RESULT AT THE END OF THE BLOCK> 

;PROGRAM
LXI H, 2000H; H=20H, L=00H
MVI C, 0AH; SET THE COUNTER
MVI A, 00H; SUM=0;
MVI D, 00H; CLEAR REG. D FOR CARRY
UP: MOV B,M; LOAD THE MEMORY INTO REG B
ADD B; A<- A+B
JNC DOWN; JUMP IF NO CARRY EXIST
DOWN: INX H; INCREMENT HL PAIR BY UNITY
DCR C; C=C-1
JNZ UP; REAPPEARS UNLESS ALL VALUES ARE ADDED
MOV M,A; STORE THE RESULT IN DESIRED MEMEORY LOCATION
INX H; INCREMENT HL PAIR
MOV M,D; STORE THE CARRY OM MEMORY LOCATION
HLT; TERMINATE THE PROGRAM








;<WAP TO ADD THE BLOCK OF 10 NUMBERS STARTIG AT THE MEMORY LOCATON 2000H AND STORE THE RESULT AT THE END OF THE BLOCK> STORE THE RESULT IN 2010H BLOCK

;PROGRAM
LXI H, 2000H; H=20H, L=00H
LXI D, 2010H; D=20H, E=10H
MVI C, 0AH; SET THE COUNTER
MVI A,00H; RESET THE ACC
UP: MOV A,M;COPY MEMEORY CONTENT TO ACC
STAX D; STORE THE RESULT IN THE LOCATION POINTED BY DE PAIR 
INX H; INCREMENT THE HL PAIR
INX D; INCREMENT DE PAIR
DCR C; C=C-1
JNZ UP ; REPEAT UNTILL ALL VALUESADDED
HLT;; TERMINATE THE PROGRAM






;<WAP TO TRANSFER BLOCK OF TEN BYTES STARTING FRIM C000H TO MTMORY LOCATION C010H IN REVERSE ORDER
LXI H,C009H; LOAD H= C0, L=09H
LXI D,C010H; D=C0,E=10
MVI C,0AH; SET COUNTER
UP: MOV A,M; MOVE MEMORY CONTENT IN ACC
STAX D;
DCX H;
INX D;
DCR C;
JNZ UP;
HLT;








;<WAP TO TRANSFER BLOCK OF TEN BYTES STARTING FRIM C000H TO MTMORY LOCATION C010H IN REVERSE ORDER
LXI H,C009H; LOAD H= C0, L=09H
LXI D,C010H; D=C0,E=10
MVI C,0AH; SET COUNTER
UP: MOV A,M; MOVE MEMORY CONTENT IN ACC
STAX D;
DCX H;
INX D;
DCR C;
JNZ UP;
HLT;





;<WAP TO CALCULATE THE SQUARE OF NUMBERS STORED IN MEMORY LOCATION 2000H. sTORE THE RESULT IN MEMORY 2001H
;CODE

LXI H,2000H; H=C0,L=00H
MOV C,M; SET THE COUNTER WHICH IS LOCATED IN HL REG
MVI A,00H;
MVI B,00H;
UP: ADD M ; A-> A+M
JNC DOWN;
INR B;
DOWN: DCR C;
JNZ UP;
STA 2001H;
HLT;













;<WAP TO CALCULATE THE SQUARE OF NUMBERS STORED IN MEMORY LOCATION 2000H-2009H. sTORE THE RESULT IN SAME MEMORY
;CODE

LXI H,2000H; H=20,L=00H
MVI C,0AH; SET THE COUNTER
UP1: MVI B,00H;
MVI A,00H;SUM=0
MOV B,M;LOAD REG B WITH MEMORY CONTENT
UP: ADD M;A<-A+M
DCR B;B<-B+M
JNZ UP;REPEAT UNTIL COUNTER IS ZERO
MOV M,A;STORE THE RESULT IN MEMORY
INX H;INCREMENT HL PAIR
DCR C;C<-C=1
JNZ UP1;REPEAT UNTIL C IS ZERO
HLT; TERMINATE THE PROGRAM






LDA 3000H; Load first element of the array into the accumulator

MOV C, A; Move the contents of the accumulator to register C

MOV B, 01H; Initialize counter B with unity

 

Loop:

LDA 3000H, B; Load next element of the array into the accumulator

INR B; Increment counter B

CPI C, A; Compare the contents of accumulator and register C

JM L1; If accumulator > C, jump to label L1

MOV C, A; Otherwise, move the contents of the accumulator to register C

 

JMP Loop; Repeat loop until all elements have been processed

 

L1: NOP; Label L1 (do nothing)

HLT; Halt the program






